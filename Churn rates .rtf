{\rtf1\ansi\ansicpg1252\cocoartf1671\cocoasubrtf500
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\margl1440\margr1440\vieww10800\viewh13460\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0  SELECT *\
 FROM subscriptions\
 LIMIT 100;\
 \
 SELECT MIN(subscription_start),\
 	     MAX(subscription_start)\
 FROM subscriptions;\
 \
 WITH months AS \
 (SELECT\
	'2017-01-01' AS first_day,\
	'2017-01-31' AS last_day\
UNION\
   SELECT\
	'2017-02-01' AS first_day,\
	'2017-02-28' AS last_day\
 UNION\
   SELECT\
 	'2017-03-01' AS first_day,\
  	'2017-03-31' AS last_day)\
\
SELECT *\
FROM months; \
  \
WITH months AS \
 (SELECT\
	'2017-01-01' AS first_day,\
	'2017-01-31' AS last_day\
UNION\
   SELECT\
	'2017-02-01' AS first_day,\
	'2017-02-28' AS last_day\
UNION\
SELECT\
 	'2017-03-01' AS first_day,\
  	'2017-03-31' AS last_day),\
    \
  cross_join AS (\
  SELECT *\
  FROM subscriptions\
  CROSS JOIN months)\
  \
  SELECT *\
  FROM cross_join\
  LIMIT 30;\
\
WITH months AS \
 (SELECT\
	'2017-01-01' AS first_day,\
	'2017-01-31' AS last_day\
UNION\
   SELECT\
	'2017-02-01' AS first_day,\
	'2017-02-28' AS last_day\
UNION\
   SELECT\
 	'2017-03-01' AS first_day,\
  	'2017-03-31' AS last_day),\
    \
  cross_join AS (\
  SELECT *\
  FROM subscriptions\
  CROSS JOIN months),\
  \
  status AS(\
  SELECT id,\
  	      first_day AS month,\
  	      CASE WHEN segment = 87\
    	      AND (subscription_start < first_day)\
    	      AND (subscription_end > first_day \
                 OR subscription_end IS NULL)\
    	      THEN 1\
    	      ELSE 0\
    	      END as is_active_87,\
    	      CASE WHEN segment = 30\
    	      AND(subscription_start < first_day)\
    	      AND (subscription_end > first_day \
                 OR subscription_end IS NULL)\
    	      THEN 1\
    	      ELSE 0\
    	      END as is_active_30\
  	      FROM cross_join)\
\
SELECT * \
FROM status \
LIMIT 50;\
\
WITH months AS \
 (SELECT\
	'2017-01-01' AS first_day,\
	'2017-01-31' AS last_day\
UNION\
   SELECT\
	'2017-02-01' AS first_day,\
	'2017-02-28' AS last_day\
UNION\
   SELECT\
 	'2017-03-01' AS first_day,\
  	'2017-03-31' AS last_day),\
    \
  cross_join AS (\
  SELECT *\
  FROM subscriptions\
  CROSS JOIN months),\
  \
  status AS(\
  SELECT id,\
  	first_day AS month,\
  	CASE WHEN segment = 87\
    	AND (subscription_start < first_day)\
    	AND (subscription_end > first_day \
           OR subscription_end IS NULL)\
    	THEN 1\
    	ELSE 0\
    	END as is_active_87,\
    	CASE WHEN segment = 30\
    	AND(subscription_start < first_day)\
    	AND (subscription_end > first_day \
           OR subscription_end IS NULL)\
    	THEN 1\
    	ELSE 0\
    	END as is_active_30,\
    	CASE WHEN segment = 87\
    	AND subscription_end BETWEEN first_day AND 				 			last_day THEN 1\
   	ELSE 0\
   	END as is_canceled_87,\
    	CASE WHEN segment = 30\
    	AND subscription_end BETWEEN first_day AND \
			last_day THEN 1\
   	ELSE 0\
   	END as is_canceled_30\
  	FROM cross_join)\
SELECT *\
FROM status \
LIMIT 50;\
\
WITH months AS \
 (SELECT\
	'2017-01-01' AS first_day,\
	'2017-01-31' AS last_day\
UNION\
   SELECT\
	'2017-02-01' AS first_day,\
	'2017-02-28' AS last_day\
UNION\
   SELECT\
 	'2017-03-01' AS first_day,\
  	'2017-03-31' AS last_day),\
    \
  cross_join AS (\
  SELECT *\
  FROM subscriptions\
  CROSS JOIN months),\
  \
  status AS(\
  SELECT id,\
  	      first_day AS month,\
  	      CASE WHEN segment = 87\
    	      AND (subscription_start < first_day)\
    	      AND (subscription_end > first_day \
                 OR subscription_end IS NULL)\
    	      THEN 1\
    	      ELSE 0\
    	      END as is_active_87,\
    	      CASE WHEN segment = 30\
    	      AND(subscription_start < first_day)\
    	      AND (subscription_end > first_day \
                 OR subscription_end IS NULL)\
    	      THEN 1\
    	      ELSE 0\
    	      END as is_active_30,\
    	      CASE WHEN segment = 87\
    	      AND subscription_end BETWEEN first_day AND 				 			last_day THEN 1\
   	      ELSE 0\
   	      END as is_canceled_87,\
    	      CASE WHEN segment = 30\
    	       AND subscription_end BETWEEN first_day AND 				 			last_day THEN 1\
   	       ELSE 0\
   	       END as is_canceled_30\
  	       FROM cross_join),\
        \
  status_aggregate AS (\
  	SELECT month,\
  		SUM (is_active_87) AS sum_active_87,\
  		SUM (is_active_30) AS sum_active_30,\
  		SUM (is_canceled_87) AS sum_canceled_87,\
  		SUM (is_canceled_30) AS sum_canceled_30\
    FROM status\
    GROUP BY month)\
           \
  SELECT * \
  FROM status_aggregate;\
  \
WITH months AS \
 (SELECT\
	'2017-01-01' AS first_day,\
	'2017-01-31' AS last_day\
UNION\
   SELECT\
	'2017-02-01' AS first_day,\
	'2017-02-28' AS last_day\
UNION\
   SELECT\
 	'2017-03-01' AS first_day,\
  	'2017-03-31' AS last_day),\
    \
  cross_join AS (\
  SELECT *\
  FROM subscriptions\
  CROSS JOIN months),\
  \
  status AS(\
  SELECT id,\
  	first_day AS month,\
  	CASE WHEN segment = 87\
    	AND (subscription_start < first_day)\
    	AND (subscription_end > first_day \
           OR subscription_end IS NULL)\
    	THEN 1\
    	ELSE 0\
    	END as is_active_87,\
    	CASE WHEN segment = 30\
    	AND(subscription_start < first_day)\
    	AND (subscription_end > first_day \
           OR subscription_end IS NULL)\
    	THEN 1\
    	ELSE 0\
    	END as is_active_30,\
    	CASE WHEN segment = 87\
    	AND subscription_end BETWEEN first_day AND 				 			last_day THEN 1\
   	ELSE 0\
   	END as is_canceled_87,\
    	CASE WHEN segment = 30\
    	AND subscription_end BETWEEN first_day AND 				 			last_day THEN 1\
   	ELSE 0\
   	END as is_canceled_30\
  	FROM cross_join),\
        \
  status_aggregate AS (\
  	SELECT month,\
  		SUM (is_active_87) AS sum_active_87,\
  		 SUM (is_active_30) AS sum_active_30,\
  		 SUM (is_canceled_87) AS sum_canceled_87,\
  		 SUM (is_canceled_30) AS sum_canceled_30\
    FROM status\
    GROUP BY month)\
    \
SELECT month,\
	1.0 * sum_canceled_87 / sum_active_87 as churn_rate_87,\
       	1.0 * sum_canceled_30 / sum_active_30 as churn_rate_30\
  FROM status_aggregate\
  ORDER BY month ASC;\
\
           }